{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://kind.cs.uiowa.edu/schemas/kind2-output.json",
    "title": "JSON schema for Kind 2's output",

    "definitions": {
        "log": {
            "type": "object",
            "properties": {
                "objectType" : {
                    "const": "log"
                },
                "level": {
                    "enum": [
                        "fatal",
                        "error",
                        "warn",
                        "note",
                        "info",
                        "debug",
                        "trace"
                    ]
                },
                "source": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "line": {
                    "type": "integer"
                },
                "column": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": ["objectType", "level", "source", "value"]
        },
        "statItem": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "enum": ["int", "float", "list"]
                },
                "value": {
                    "type": "number"
                },
                "valueList": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "enum": ["int", "float"]
                            },
                            "value": {
                                "type": "number"
                            }
                        },
                        "required": ["type", "value"]
                    }
                }
            },
            "required": ["name", "type"]
        },
        "statSection": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/statItem"
                    }
                }
            },
            "required": ["name", "items"]
        },
        "stat": {
            "type": "object",
            "properties": {
                "objectType" : {
                    "const": "stat"
                },
                "source": {
                    "type": "string"
                },
                "sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/statSection"
                    }
                }
            },
            "required": ["objectType", "source", "sections"]
        },
        "progress": {
            "type": "object",
            "properties": {
                "objectType" : {
                    "const": "progress"
                },
                "source": {
                    "type": "string"
                },
                "k": {
                    "type": "integer",
                    "minimum": 0
                }
            },
            "required": ["objectType", "source", "k"]
        },
        "modelElementCategory": {
            "enum": [
                "nodeCall",
                "assumption",
                "guarantee",
                "require",
                "ensure",
                "equation",
                "assertion",
                "frameBlock"
            ]
        },
        "modelElementCategories": {
            "enum": [
                "nodeCalls",
                "contracts",
                "equations",
                "assertions",
                "annotations"
            ]
        },
        "coreClass": {
            "enum": [
                "must",
                "must complement",
                "ivc",
                "ivc complement",
                "mcs",
                "mcs complement",
                "conflicting constraints"
            ]
        },
        "ivcSettings": {
            "type": "object",
            "properties": {
                "ivcCategory": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/modelElementCategories" }
                },
                "ivcAll": {
                    "type": "boolean"
                },
                "ivcApproximate": {
                    "type": "boolean"
                },
                "ivcSmallestFirst": {
                    "type": "boolean"
                },
                "ivcOnlyMainNode": {
                    "type": "boolean"
                },
                "ivcMustSet": {
                    "type": "boolean"
                }
            },
            "required": [
                "ivcCategory", "ivcAll", "ivcApproximate", "ivcSmallestFirst",
                "ivcOnlyMainNode", "ivcMustSet"
            ]
        },
        "mcsSettings": {
            "type": "object",
            "properties": {
                "mcsCategory": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/modelElementCategories" }
                },
                "mcsAll": {
                    "type": "boolean"
                },
                "mcsOnlyMainNode": {
                    "type": "boolean"
                }
            },
            "required": [
                "mcsCategory", "mcsAll", "mcsOnlyMainNode"
            ]
        },
        "kind2Options": {
            "type": "object",
            "properties": {
                "objectType" : {
                    "const": "kind2Options"
                },
                "enabled": {
                    "type": "array",
                    "items": { "type" : "string" }
                },
                "timeout": {
                    "type": "number"
                },
                "bmcMax": {
                    "type": "integer"
                },
                "compositional": {
                    "type": "boolean"
                },
                "modular": {
                    "type": "boolean"
                },
                "mcs": {
                    "$ref": "#/definitions/mcsSettings"
                },
                "ivc": {
                    "$ref": "#/definitions/ivcSettings"
                }
            },
            "required": [
                "objectType", "enabled", "timeout", "bmcMax",
                "compositional", "modular"
            ]
        },
        "modelElement": {
            "type": "object",
            "properties": {
                "category": { 
                    "$ref": "#/definitions/modelElementCategory"
                },
                "name": {
                    "type": "string"
                },
                "line": {
                    "type": "integer"
                },
                "column": {
                    "type": "integer"
                },
                "file": {
                    "type": "string"
                }
            },
            "required": [
                "category", "name", "line", "column"
            ]
        },
        "modelElementNodeSet": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "elements": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/modelElement" }
                }
            },
            "required": [
                "name", "elements"
            ]
        },
        "modelElementSet": {
            "type": "object",
            "properties": {
                "objectType" : {
                    "const": "modelElementSet"
                },
                "class": {
                    "$ref": "#/definitions/coreClass"
                },
                "size": {
                    "type": "integer"
                },
                "property": {
                    "type": "string"
                },
                "runtime": {
                    "$ref": "#/definitions/runtime"
                },
                "approximate": {
                    "type": "boolean"
                },
                "nodes": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/modelElementNodeSet" }
                },
                "counterExample": {
                    "$ref": "#/definitions/trace"
                },
                "witness": {
                    "$ref": "#/definitions/trace"
                }
            },
            "required": [
                "objectType", "class", "size", "runtime", "nodes", "approximate"
            ]
        },
        "noModelElementSet": {
            "type": "object",
            "properties": {
                "objectType" : {
                    "const": "noModelElementSet"
                },
                "class": {
                    "$ref": "#/definitions/coreClass"
                },
                "property": {
                    "type": "string"
                },
                "answer": {
                    "enum": ["noSolution", "unknown"]
                },
                "runtime": {
                    "$ref": "#/definitions/runtime"
                }
            },
            "required": [
                "objectType", "class", "runtime", "answer"
            ]
        },
        "scope": {
            "type": "string"
        },
        "analysisStart": {
            "type": "object",
            "properties": {
                "objectType" : {
                    "const": "analysisStart"
                },
                "top": {
                    "$ref": "#/definitions/scope"
                },
                "context": {
                    "enum": ["type","contract","environment"]
                },
                "concrete": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/scope" }
                },
                "abstract": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/scope" }
                },
                "assumptions": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": [
                          { "$ref": "#/definitions/scope" },
                          { "type": "integer" }
                      ],
                      "minItems": 2,
                      "maxItems": 2
                    }
                }
            },
            "required": [
                "objectType", "top", "concrete", "abstract", "assumptions"
            ]
        },
        "postAnalysisStart": {
            "type": "object",
            "properties": {
                "objectType": {
                    "const": "postAnalysisStart"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": ["objectType", "name"]
        },
        "analysisStop": {
            "type": "object",
            "properties": {
                "objectType": {
                    "const": "analysisStop"
                }
            },
            "required": ["objectType"]
        },
        "postAnalysisEnd": {
            "type": "object",
            "properties": {
                "objectType": {
                    "const": "postAnalysisEnd"
                }
            },
            "required": ["objectType"]
        },
        "runtime": {
            "type": "object",
            "properties": {
                "unit": {
                    "const": "sec"
                },
                "timeout": {
                    "type": "boolean"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "answer": {
            "type": "object",
            "properties": {
                "source": {
                    "type": "string"
                },
                "value": {
                    "enum": ["valid", "reachable", "falsifiable", "unreachable", "unknown"]
                }
            },
            "required": ["value"]
        },
        "contractModes": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "contract": {
                        "type": "string"
                    },
                    "modes": {
                        "type": "array",
                        "items": { "type": "string" }
                    },
                    "subcontractModes": {
                        "$ref": "#/definitions/contractModes"
                    }
                },
                "required": ["contract", "modes", "subcontractModes"]
            }
        },
        "activeModes": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "instant": {
                       "type": "integer",
                       "minimum": 0
                    },
                    "topModes": {
                        "type": "array",
                        "items": { "type": "string" }
                    },
                    "contractModes": {
                        "$ref": "#/definitions/contractModes"
                    }
                },
                "required": ["instant", "topModes", "contractModes"]
            }
        },
        "kind2Type": {
            "enum": [
                "bool",
                "int", "subrange",
                "int8", "int16", "int32", "int64",
                "uint8", "uint16", "uint32", "uint64",
                "real",
                "enum",
                "array",
                "abstr"
             ]
        },
        "subrangeTypeInfo": {
            "type": "object",
            "properties": {
                "min": { "type": "integer" },
                "max": { "type": "integer" }
            }
        },
        "enumTypeInfo": {
            "type": "object",
            "properties": {
                "name": { "type": "string" },
                "values": {
                    "type": "array",
                    "items": { "type" : "string" }
                }
            },
            "required": ["values"]
        },
        "arrayTypeInfo": {
            "type": "object",
            "properties": {
                "baseType": {
                    "$ref": "#/definitions/kind2Type"
                },
                "baseTypeInfo": {
                    "$ref": "#/definitions/kind2TypeInfo"
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            { "type" : "integer" },
                            { "type" : "null" }
                        ]
                    }
                }
            },
            "required": ["baseType", "sizes"]
        },
        "abstrTypeInfo": {
            "type": "object",
            "properties": {
                "name": { "type": "string" }
            },
            "required": ["name"]
        },
        "kind2TypeInfo": {
            "anyOf": [
                { "$ref": "#/definitions/subrangeTypeInfo" },
                { "$ref": "#/definitions/enumTypeInfo" },
                { "$ref": "#/definitions/arrayTypeInfo" },
                { "$ref": "#/definitions/abstrTypeInfo" }
            ]
        },
        "enumValue": {
            "type": "string"
        },
        "fractionalLiteral": {
            "type": "object",
            "properties": {
                "num": { "type": "integer" },
                "den": { "type": "integer" }
            },
            "required": ["num", "den"]
        },
        "kind2Value": {
            "anyOf": [
                { "type": "boolean" },
                { "type": "number" },
                { "$ref": "#/definitions/enumValue" },
                { "$ref": "#/definitions/fractionalLiteral" },
                {
                  "type": "array",
                  "items": { "$ref": "#/definitions/kind2Value" }
                }
            ]
        },
        "streamValues": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/kind2Type"
                },
                "typeInfo": {
                    "$ref": "#/definitions/kind2TypeInfo"
                },
                "class": {
                    "enum": ["input", "output", "local"]
                },
                "instantValues": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": [
                            { "type": "integer" },
                            { "$ref": "#/definitions/kind2Value" }
                        ],
                        "minItems": 2,
                        "maxItems": 2
                    }
                }
            },
            "required": ["name", "type", "class", "instantValues"]
        },
        "trace": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "blockType": {
                        "enum": ["node", "function", "state"]
                    },
                    "name": {
                        "type": "string"
                    },
                    "file": {
                        "type": "string"
                    },
                    "line": {
                        "type": "integer"
                    },
                    "column": {
                        "type": "integer"
                    },
                    "activeModes": {
                        "$ref": "#/definitions/activeModes"
                    },
                    "streams" : {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/streamValues"
                        }
                    },
                    "subnodes": {
                        "$ref": "#/definitions/trace"
                    }
                },
                "required": ["blockType", "name"]
            }
        },
        "property": {
            "type": "object",
            "properties": {
                "objectType": {
                    "const": "property"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/definitions/scope"
                },
                "file": {
                    "type": "string"
                },
                "line": {
                    "type": "integer"
                },
                "column": {
                    "type": "integer"
                },
                "source": {
                    "enum": [
                        "Assumption",
                        "Guarantee",
                        "Generated",
                        "NonVacuityCheck",
                        "OneModeActive",
                        "Ensure",
                        "PropAnnot"
                    ]
                },
                "isCandidate": {
                    "type": "boolean"
                },
                "runtime": {
                    "$ref": "#/definitions/runtime"
                },
                "k": {
                    "type": "integer",
                    "minimum": 0
                },
                "trueFor": {
                    "type": "integer",
                    "minimum": 0
                },
                "unreachableFor": {
                    "type": "integer",
                    "minimum": 0
                },
                "falseAt": {
                    "type": "integer",
                    "minimum": 0
                },
                "reachableAt": {
                    "type": "integer",
                    "minimum": 0
                },
                "answer": {
                    "$ref": "#/definitions/answer"
                },
                "counterExample": {
                    "$ref": "#/definitions/trace"
                },
                "witness": {
                    "$ref": "#/definitions/trace"
                }
            },
            "required": ["objectType", "name", "line", "column", "source", "answer"]
        },
        "execution": {
            "type": "object",
            "properties": {
                "objectType": {
                    "const": "execution"
                },
                "trace": {
                    "$ref": "#/definitions/trace"
                }
            },
            "required": ["objectType", "trace"]
        },
        "realizabilityCheck": {
            "type": "object",
            "properties": {
                "objectType": {
                    "const": "realizabilityCheck"
                },
                "runtime": {
                    "$ref": "#/definitions/runtime"
                },
                "result": {
                    "enum": ["realizable","unrealizable"]
                },
                "viableStates": {
                    "type": "string"
                },
                "deadlockingTrace": {
                    "$ref": "#/definitions/trace"
                },
                "conflictingSet": {
                    "$ref": "#/definitions/modelElementSet"
                }
            },
            "required": [
                "objectType", "runtime", "result"
            ]
        },
        "satisfiabilityCheck": {
            "type": "object",
            "properties": {
                "objectType": {
                    "const": "satisfiabilityCheck"
                },
                "runtime": {
                    "$ref": "#/definitions/runtime"
                },
                "result": {
                    "enum": ["satisfiable","unsatisfiable"]
                }
            },
            "required": [
                "objectType", "runtime", "result"
            ]
        },
        "results": {
            "type": "array",
            "items": {
                "anyOf": [
                   { "$ref": "#/definitions/log" },
                   { "$ref": "#/definitions/stat" },
                   { "$ref": "#/definitions/progress" },
                   { "$ref": "#/definitions/kind2Options" },
                   { "$ref": "#/definitions/analysisStart" },
                   { "$ref": "#/definitions/analysisStop" },
                   { "$ref": "#/definitions/postAnalysisStart" },
                   { "$ref": "#/definitions/modelElementSet" },
                   { "$ref": "#/definitions/noModelElementSet" },
                   { "$ref": "#/definitions/postAnalysisEnd" },
                   { "$ref": "#/definitions/property" },
                   { "$ref": "#/definitions/execution" },
                   { "$ref": "#/definitions/realizabilityCheck" },
                   { "$ref": "#/definitions/satisfiabilityCheck" }
                ] 
            }
        }
    },

    "anyOf": [
      { "$ref": "#/definitions/log" },
      { "$ref": "#/definitions/results" }
    ]
}
