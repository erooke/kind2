<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <!-- |===| Simple types -->

  <xs:simpleType name="NonNegativeInteger">
    <xs:restriction base="xs:integer">
      <xs:minInclusive value="0"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Log class -->
  <xs:simpleType name="LogClass">
    <xs:restriction base="xs:string">
      <xs:enumeration value="fatal"/>
      <xs:enumeration value="error"/>
      <xs:enumeration value="warn"/>
      <xs:enumeration value="note"/>
      <xs:enumeration value="info"/>
      <xs:enumeration value="debug"/>
      <xs:enumeration value="trace"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Context of realizability check -->
  <xs:simpleType name="Context">
    <xs:restriction base="xs:string">
      <xs:enumeration value="type"/>
      <xs:enumeration value="imported node"/>
      <xs:enumeration value="contract"/>
      <xs:enumeration value="environment"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Time unit. Can only be "sec" for now. -->
  <xs:simpleType name="TimeUnit">
    <xs:restriction base="xs:string">
      <xs:enumeration value="sec"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Kind 2 module. Not restricted for now. -->
  <xs:simpleType name="Kind2Module">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>

  <!-- Property status. -->
  <xs:simpleType name="PropStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="valid"/>
      <xs:enumeration value="reachable"/>
      <xs:enumeration value="falsifiable"/>
      <xs:enumeration value="unreachable"/>
      <xs:enumeration value="unknown"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Stream type -->
  <xs:simpleType name="Kind2Type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="bool"/>
      <xs:enumeration value="int"/>
      <xs:enumeration value="real"/>
      <xs:enumeration value="subrange"/>
      <xs:enumeration value="int8"/>
      <xs:enumeration value="int16"/>
      <xs:enumeration value="int32"/>
      <xs:enumeration value="int64"/>
      <xs:enumeration value="uint8"/>
      <xs:enumeration value="uint16"/>
      <xs:enumeration value="uint32"/>
      <xs:enumeration value="uint64"/>
      <xs:enumeration value="enum"/>
      <xs:enumeration value="array"/>
      <xs:enumeration value="abstr"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Stream class. Among "input", "output" and "local". -->
  <xs:simpleType name="StreamClass">
    <xs:restriction base="xs:string">
      <xs:enumeration value="input"/>
      <xs:enumeration value="output"/>
      <xs:enumeration value="local"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="StatTypeOfValueType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="float"/>
      <xs:enumeration value="int"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Enumerations for IVC and MCS -->
  <xs:simpleType name="ModelElementCategory">
    <xs:restriction base="xs:string">
      <xs:enumeration value="node_call"/>
      <xs:enumeration value="assumption"/>
      <xs:enumeration value="guarantee"/>
      <xs:enumeration value="require"/>
      <xs:enumeration value="ensure"/>
      <xs:enumeration value="equation"/>
      <xs:enumeration value="assertion"/>
      <xs:enumeration value="frame_block"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="CoreClass">
    <xs:restriction base="xs:string">
      <xs:enumeration value="must"/>
      <xs:enumeration value="must complement"/>
      <xs:enumeration value="ivc"/>
      <xs:enumeration value="ivc complement"/>
      <xs:enumeration value="mcs"/>
      <xs:enumeration value="mcs complement"/>
      <xs:enumeration value="conflicting constraints"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="NoModelElementSetAnswer">
    <xs:restriction base="xs:string">
      <xs:enumeration value="no_solution"/>
      <xs:enumeration value="unknown"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="RealizabilityCheckResult">
    <xs:restriction base="xs:string">
      <xs:enumeration value="realizable"/>
      <xs:enumeration value="unrealizable"/>
      <xs:enumeration value="unknown"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="SatisfiabilityCheckResult">
    <xs:restriction base="xs:string">
      <xs:enumeration value="satisfiable"/>
      <xs:enumeration value="unsatisfiable"/>
      <xs:enumeration value="unknown"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- |===| Complex types -->

  <xs:complexType name="GenericLogType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="class" type="LogClass" use="required"/>
        <xs:attribute name="source" type="xs:string" use="required"/>
        <xs:attribute name="line" type="NonNegativeInteger"/>
        <xs:attribute name="column" type="NonNegativeInteger"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="ProgressLogType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="source" type="xs:string" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="StatValueType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="type" type="StatTypeOfValueType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="StatValueListType">
    <xs:sequence>
      <xs:element name="value" type="StatValueType" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="StatSectionItemType">
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <xs:choice>
        <xs:element name="value" type="StatValueType" minOccurs="1" maxOccurs="1"/>
        <xs:element name="valuelist" type="StatValueListType" minOccurs="1" maxOccurs="1"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="StatSectionType">
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <xs:element name="item" type="StatSectionItemType" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="StatLogType">
    <xs:sequence>
      <xs:element name="Section" type="StatSectionType" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="source" type="xs:string"  use="required"/>
  </xs:complexType>

  <xs:complexType name="AnalysisStartType">
    <xs:attribute name="top" type="xs:string"  use="required"/>
    <xs:attribute name="context" type="Context"/>
    <xs:attribute name="concrete" type="xs:string"/>
    <xs:attribute name="abstract" type="xs:string"/>
    <xs:attribute name="assumptions" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="AnalysisStopType">
  </xs:complexType>

  <xs:complexType name="RuntimeType">
    <xs:simpleContent>
      <xs:extension base="xs:decimal">
        <xs:attribute name="unit" type="TimeUnit" use="required"/>
        <xs:attribute name="timeout" type="xs:boolean" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="AnswerType">
    <xs:simpleContent>
      <xs:extension base="PropStatus">
        <xs:attribute name="source" type="Kind2Module"/>
        <xs:attribute name="comment" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="ContractModesType">
    <xs:sequence>
      <xs:element name="Mode" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Contract" type="ContractModesType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ActiveModeType">
    <xs:sequence>
      <xs:element name="Modes" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Contract" type="ContractModesType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="instant" type="NonNegativeInteger" use="required"/>
  </xs:complexType>

  <xs:simpleType name="GenericValue">
    <xs:restriction base="xs:string">
      <!-- <!-\- Bool. -\-> -->
      <!-- <xs:pattern value="false|true"/> -->
      <!-- <!-\- Integer. -\-> -->
      <!-- <xs:pattern value="(-)*0|[1-9]([0-9])*"/> -->
      <!-- <!-\- Real. -\-> -->
      <!-- <xs:pattern value="(-)*(0|[1-9]([0-9])*)\.(0|([0-9])*[1-9])"/> -->
      <!-- <xs:pattern value="(-)*(0|[1-9]([0-9])*)/(0|[1-9]([0-9])*)"/> -->
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="ItemType">
    <xs:simpleContent>
      <xs:extension base="GenericValue">
        <xs:attribute name="index" type="NonNegativeInteger" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="ArrayType">
    <xs:sequence>
      <xs:choice>
        <xs:element name="Item" type="ItemType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="Array" type="ArrayType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="size" type="NonNegativeInteger" use="required"/>
  </xs:complexType>

  <xs:complexType name="ValueType" mixed="true">
    <xs:choice  minOccurs="0" maxOccurs="1">
      <xs:element name="Array" type="ArrayType"/>
    </xs:choice>
    <xs:attribute name="instant" type="NonNegativeInteger" use="required"/>
  </xs:complexType>

  <xs:complexType name="StreamType">
    <xs:sequence>
      <xs:element name="Value" type="ValueType" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="type" type="Kind2Type" use="required"/>
    <!-- Additional attributes for subrange -->
    <xs:attribute name="min" type="xs:integer"/>
    <xs:attribute name="max" type="xs:integer"/>
    <!-- Additional attributes for enum -->
    <xs:attribute name="enumName" type="xs:string"/>
    <xs:attribute name="values" type="xs:string"/>
    <!-- Additional attributes for abstract type -->
    <xs:attribute name="abstrName" type="xs:string"/>
    <!-- -->
    <xs:attribute name="class" type="StreamClass" use="required"/>
  </xs:complexType>

  <xs:complexType name="AutomatonTraceInfoType">
    <xs:sequence>
      <xs:element name="Stream" type="StreamType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Node" type="ComponentTraceInfoType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Automaton" type="AutomatonTraceInfoType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="file" type="xs:string"/>
    <xs:attribute name="line" type="NonNegativeInteger"/>
    <xs:attribute name="column" type="NonNegativeInteger"/>
  </xs:complexType>

  <xs:complexType name="ComponentTraceInfoType">
    <xs:sequence>
      <xs:element name="ActiveModes" type="ActiveModeType" minOccurs="0" maxOccurs="1"/>
      <xs:element name="Stream" type="StreamType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Node" type="ComponentTraceInfoType"/>
        <xs:element name="Function" type="ComponentTraceInfoType"/>
        <xs:element name="State" type="ComponentTraceInfoType"/>
        <xs:element name="Automaton" type="AutomatonTraceInfoType" />
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="file" type="xs:string"/>
    <xs:attribute name="line" type="NonNegativeInteger"/>
    <xs:attribute name="column" type="NonNegativeInteger"/>
  </xs:complexType>

  <xs:complexType name="TraceInfoType">
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="Node" type="ComponentTraceInfoType"/>
      <xs:element name="Function" type="ComponentTraceInfoType"/>
      <xs:element name="State" type="ComponentTraceInfoType"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="PropertyType">
    <xs:sequence>
      <!-- Runtime is present when Answer is Valid or Falsifiable -->
      <xs:element name="Runtime" type="RuntimeType" minOccurs="0" maxOccurs="1"/>
      <xs:element name="K" type="NonNegativeInteger" minOccurs="0" maxOccurs="1"/>
      <xs:element name="Answer" type="AnswerType" minOccurs="1" maxOccurs="1"/>
      <xs:element name="CounterExample" type="TraceInfoType" minOccurs="0" maxOccurs="1"/>
      <xs:element name="Witness" type="TraceInfoType" minOccurs="0" maxOccurs="1"/>
      <xs:element name="FalseAt" type="NonNegativeInteger" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ReachableAt" type="NonNegativeInteger" minOccurs="0" maxOccurs="1"/>
      <!-- TrueFor/UnreachableFor may be present when Answer is Unknown -->
      <xs:element name="TrueFor" type="NonNegativeInteger" minOccurs="0" maxOccurs="1"/>
      <xs:element name="UnreachableFor" type="NonNegativeInteger" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="file" type="xs:string"/>
    <xs:attribute name="line" type="NonNegativeInteger"/>
    <xs:attribute name="column" type="NonNegativeInteger"/>
    <xs:attribute name="scope" type="xs:string"/>
    <xs:attribute name="source" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="PostAnalysisStartType">
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ModelElementType">
    <xs:attribute name="category" type="ModelElementCategory" use="required"/>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="file" type="xs:string"/>
    <xs:attribute name="line" type="NonNegativeInteger" use="required"/>
    <xs:attribute name="column" type="NonNegativeInteger" use="required"/>
  </xs:complexType>

  <xs:complexType name="ModelElementNodeSetType">
    <xs:sequence>
      <xs:element name="Element" type="ModelElementType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ModelElementSetType">
    <xs:sequence>
      <xs:element name="Runtime" type="RuntimeType" minOccurs="0" maxOccurs="1"/>
      <xs:element name="Node" type="ModelElementNodeSetType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="CounterExample" type="TraceInfoType" minOccurs="0" maxOccurs="1"/>
      <xs:element name="Witness" type="TraceInfoType" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="class" type="CoreClass" use="required"/>
    <xs:attribute name="size" type="NonNegativeInteger" use="required"/>
    <xs:attribute name="property" type="xs:string" />
    <xs:attribute name="approximate" type="xs:boolean" use="required"/>
  </xs:complexType>

  <xs:complexType name="NoModelElementSetType">
    <xs:sequence>
      <xs:element name="Answer" type="NoModelElementSetAnswer" minOccurs="1" maxOccurs="1"/>
      <xs:element name="Runtime" type="RuntimeType" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="class" type="CoreClass" use="required"/>
    <xs:attribute name="property" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="RealizabilityCheckType">
    <xs:sequence>
      <xs:element name="Result" type="RealizabilityCheckResult" minOccurs="1" maxOccurs="1"/>
      <xs:element name="Runtime" type="RuntimeType" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ViableStates" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <xs:element name="DeadlockingTrace" type="TraceInfoType" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ConflictingSet" type="ModelElementSetType" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="SatisfiabilityCheckType">
    <xs:sequence>
      <xs:element name="Result" type="SatisfiabilityCheckResult" minOccurs="1" maxOccurs="1"/>
      <xs:element name="Runtime" type="RuntimeType" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ResultsType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Log" type="GenericLogType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:element name="Progress" type="ProgressLogType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Stat" type="StatLogType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="AnalysisStart" type="AnalysisStartType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:element name="AnalysisStop" type="AnalysisStopType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:element name="Property" type="PropertyType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:element name="PostAnalysisStart" type="PostAnalysisStartType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="ModelElementSet" type="ModelElementSetType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="NoModelElementSet" type="NoModelElementSetType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="PostAnalysisEnd" type="AnalysisStopType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Execution" type="TraceInfoType" minOccurs="0" maxOccurs="1"/>
      <xs:element name="RealizabilityCheck" type="RealizabilityCheckType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="SatisfiabilityCheck" type="SatisfiabilityCheckType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:attribute name="enabled" type="xs:string"/>
    <xs:attribute name="timeout" type="xs:decimal"/>
    <xs:attribute name="bmc_max" type="NonNegativeInteger"/>
    <xs:attribute name="modular" type="xs:boolean"/>
    <xs:attribute name="compositional" type="xs:boolean"/>

    <xs:attribute name="ivc_category" type="xs:string"/>
    <xs:attribute name="ivc_all" type="xs:boolean"/>
    <xs:attribute name="ivc_approximate" type="xs:boolean"/>
    <xs:attribute name="ivc_smallest_first" type="xs:boolean"/>
    <xs:attribute name="ivc_only_main_node" type="xs:boolean"/>
    <xs:attribute name="ivc_must_set" type="xs:boolean"/>

    <xs:attribute name="mcs_category" type="xs:string"/>
    <xs:attribute name="mcs_all" type="xs:boolean"/>
    <xs:attribute name="mcs_only_main_node" type="xs:boolean"/>
  </xs:complexType>

  <!-- |===| Root: Either a Log or a Results element -->
  <xs:element name="Log" type="GenericLogType" />
  <xs:element name="Results" type="ResultsType" />

</xs:schema>
