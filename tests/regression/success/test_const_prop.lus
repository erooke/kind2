const c: int = 1;
const t1: int = c;

const fc: int;

const r: real = 1.1;
const r1: real = 1.1 + r;
const r2: real = 1.1 + r1;

const t:int = t1; -- should inline to 1
const t2: bool = c < t; -- should inline to false

const arr: bool^6 = [false, false, false, true, true, true];
const arr2: int^3 = (3+c) ^ 3; -- should inline to 4

const f: bool = arr[fc]; --  should not inline
const f2: bool = arr[1]; -- should inline to false
const f3: bool = [true, true, true][2];

const t3:[int, int, bool] = {t, 3, true}; -- should inline to (1, 3, true)
const arr3: int^4 = [1, 1+1, t1+c, 5]; -- inline all t's and simplify

const p: int = t3.%1; -- should inline to 3

node main(x:int) returns (y:int)
let
  y = x + t;
tel