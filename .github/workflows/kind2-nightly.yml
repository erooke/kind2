name: Nightly Build

# Run the nightly build at 8 AM UTC / 2 AM Central
on:
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * *"

jobs:
  get-nightly-ready:
    if: github.repository == 'kind2-mc/kind2'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Delete old assets
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        ids=$(gh release view nightly --json assets --jq '.assets | map(.name) | .[]')
        for id in $ids;
        do
          gh release delete-asset nightly $id -y
        done

    - name: Update nightly tag
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag -f nightly
        git push --tags -f

  build:
    if: github.repository == 'kind2-mc/kind2'
    needs: [get-nightly-ready]
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-12, macos-14 ]
        ocaml-version: [ 5.1.1 ]

    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Kind 2 linux binary
      if: runner.os == 'Linux'
      uses: docker/build-push-action@v5
      with:
        file: docker/Dockerfile
        context: ./
        target: builder
        load: true
        tags: kind2:latest

    - name: Extract Kind 2 linux binary
      id: extract
      if: runner.os == 'Linux'
      uses: shrink/actions-docker-extract@v3
      with:
        image: kind2:latest
        path: /home/opam/kind2-build/bin/kind2
        destination: ./bin/kind2

    - name: Build Kind 2 macOS binary
      if: runner.os == 'macOS'
      uses: ./.github/actions/build-kind2
      with:
        ocaml-version: ${{ matrix.ocaml-version }}
    
    - name: Strip Kind 2 macOS binary
      if: runner.os == 'macOS'
      run: strip ./bin/kind2

    - name: Create tar.gz file
      id: create_tarball
      run: |
        cd bin
        chmod u+x kind2
        date=$(date "+%Y-%m-%d")
        if [[ "$RUNNER_OS" != "Linux" ]]; then
          tag="linux-x86_64"
        else
          tag="${{ matrix.os }}-$(uname -m)"
        fi
        tarball=kind2-$date-$tag.tar.gz
        tar -czf $tarball kind2
        echo "filepath=./bin/$tarball" >> $GITHUB_OUTPUT

    - name: Upload release asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload nightly \
          ${{ steps.create_tarball.outputs.filepath }} \
          --repo $GITHUB_REPOSITORY
